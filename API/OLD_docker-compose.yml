services:

  api_node:
    container_name: api_node
    #build: ./
    image: node
    working_dir: '/app'
    volumes:
      - '.:/app'
      - '/app/node_modules'
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 3000:8080
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run start
    depends_on:
      - mongo

  mongo:
    image: mongo
    restart: always
    env_file: .env-mongo
    ports:
        - 27017:27017
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_BASICAUTH_USERNAME: jennifer
  #     ME_CONFIG_BASICAUTH_PASSWORD: 1z@BRkm@6^%P
  #     # ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     # ME_CONFIG_MONGODB_ADMINPASSWORD: N6QmF7kSNGLq
  #     # ME_CONFIG_MONGODB_URL: mongodb://root:N6QmF7kSNGLq@mongo:27017

volumes:
    mongo-data:
        driver: local
    api_node:
        driver: local
        
       
#docker-compose down && docker-compose build --no-cache && docker-compose up -d && docker-compose logs -f api_node
